{"version":3,"sources":["redux/reducers/pokemons.js","redux/reducers/index.js","redux/store.js","components/CardsList.jsx","components/DetailsCard.jsx","redux/actions/pokemons.js","pages/Pokedex.jsx","App.js","index.js"],"names":["initialState","pokemons","prevPage","currentPage","nextPage","singlePokemon","state","action","type","payload","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CardsList","items","changeCurrentPage","changeSinglePokemon","className","map","el","i","key","onClick","src","sprites","front_shiny","alt","name","types","DetailsCard","item","stats","stat","base_stat","weight","moves","length","fetchPokemons","page","dispatch","a","axios","get","then","data","setPrevPage","previous","setNextPage","next","results","list","megaList","url","setPokemons","Pokedex","useDispatch","useSelector","React","useEffect","onChangeCurrentPage","useCallback","changePage","onSelectSinglePokemon","pokemon","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.686a13bc.chunk.js","sourcesContent":["const initialState = {\r\n    pokemons: [],\r\n    prevPage: null,\r\n    currentPage: null,\r\n    nextPage: null,\r\n    singlePokemon: null\r\n}\r\n\r\nconst pokemons = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_POKEMONS\": {\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload\r\n            }\r\n        }\r\n        case \"SET_NEXT_PAGE\": {\r\n            return {\r\n                ...state,\r\n                nextPage: action.payload\r\n            }\r\n        }\r\n        case \"SET_PREV_PAGE\": {\r\n            return {\r\n                ...state,\r\n                prevPage: action.payload\r\n            }\r\n        }\r\n        case \"SET_SINGLE_POKEMON\": {\r\n            return {\r\n                ...state,\r\n                singlePokemon: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pokemons;","import {combineReducers} from 'redux'\r\nimport pokemons from './pokemons.js';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  pokemons\r\n})\r\n\r\n\r\nexport default rootReducer;","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react'\r\n\r\nfunction CardsList({items, nextPage, prevPage, changeCurrentPage, changeSinglePokemon}) {\r\n\r\n    const goToNext = () => {\r\n        changeCurrentPage(nextPage);\r\n    }\r\n\r\n    const goBack = () => {\r\n        changeCurrentPage(prevPage)\r\n    }\r\n\r\n    return (\r\n        <div className=\"cards-list\">\r\n            {items&&\r\n                items.map((el, i) => {\r\n                    return (\r\n                        <div key={i} className=\"card\" onClick={() => changeSinglePokemon(el)}>\r\n                            <div className=\"card__img\">\r\n                                <img src={el.sprites.front_shiny} alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"card__name\">\r\n                                <p>{el.name}</p>\r\n                            </div>\r\n                            <div className=\"card__type\">\r\n                                {el.types.map((el, i) => {\r\n                                    return (\r\n                                    <p key={i}>{el.type.name}</p>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <div className=\"cards-list__controllers\">\r\n                <button onClick={prevPage !== null ? goBack : () => {}}>Prev</button>\r\n                <button onClick={goToNext}>Next</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardsList\r\n","import React from 'react'\r\n\r\nfunction DetailsCard({item}) {\r\n    return (\r\n        <div className=\"details-card\">\r\n            {item&&\r\n                <div className=\"big-card\">\r\n                    <div className=\"big-card__img\">\r\n                        <img src={item.sprites.front_shiny} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"big-card__name\">\r\n                        <p>{item.name}</p>\r\n                    </div>\r\n                    <div className=\"big-card__table\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>Type</td>\r\n                                    <td>Fire</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    item.stats.map((el, i) => {\r\n                                        return (\r\n                                            <tr key={i}>\r\n                                                <td>{el.stat.name}</td>\r\n                                                <td>{el.base_stat}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <tr>\r\n                                    <td>Weight</td>\r\n                                    <td>{item.weight}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Total moves</td>\r\n                                    <td>{item.moves.length}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                            {\r\n\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsCard\r\n","import axios from 'axios';\r\n\r\nexport const fetchPokemons = (page = \"http://pokeapi.co/api/v2/pokemon/?limit=12\") => (dispatch) => {\r\n    (async () => {\r\n        const list = await axios.get(page).then(({data}) => {\r\n            //console.log(data);\r\n            dispatch(setPrevPage(data.previous));\r\n            dispatch(setNextPage(data.next));\r\n            return data.results;\r\n        });\r\n        const megaList = [];\r\n        for (let i = 0; i< list.length; i++) {\r\n            megaList[i] = await axios.get(list[i].url).then(({data}) => {\r\n                return data;\r\n            });\r\n        }\r\n        \r\n        dispatch(setPokemons(megaList));\r\n    })()\r\n}\r\n\r\nexport const setPokemons = (items) => ({\r\n    type: \"SET_POKEMONS\",\r\n    payload: items\r\n});\r\n\r\nexport const setSinglePokemon = (item) => ({\r\n    type: \"SET_SINGLE_POKEMON\",\r\n    payload: item\r\n})\r\n\r\nexport const setPrevPage = (prevPage) => ({\r\n    type: \"SET_PREV_PAGE\",\r\n    payload: prevPage\r\n});\r\n\r\nexport const setNextPage = (nextPage) => ({\r\n    type: \"SET_NEXT_PAGE\",\r\n    payload: nextPage\r\n});\r\n\r\nexport const changePage = (page) => (dispatch) => {\r\n    dispatch(fetchPokemons(page));\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport CardsList from '../components/CardsList';\r\nimport DetailsCard from '../components/DetailsCard';\r\n\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {fetchPokemons, changePage, setSinglePokemon} from '../redux/actions/pokemons';\r\n\r\nfunction Pokedex() {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const pokemons = useSelector(({pokemons}) => pokemons.pokemons)\r\n    const singlePokemon = useSelector(({pokemons}) => pokemons.singlePokemon)\r\n    const prevPage = useSelector(({pokemons}) => pokemons.prevPage)\r\n    const nextPage = useSelector(({pokemons}) => pokemons.nextPage)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchPokemons());\r\n    }, []);\r\n\r\n    const onChangeCurrentPage = React.useCallback((page) => {\r\n        dispatch(changePage(page));\r\n    }, []);\r\n\r\n    const onSelectSinglePokemon = React.useCallback((pokemon) => {\r\n        dispatch(setSinglePokemon(pokemon));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"pokedex\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"pokedex-content\">\r\n                    <div className=\"title\">\r\n                        <h1>Pokedex</h1>\r\n                    </div>\r\n                    <CardsList\r\n                        items={pokemons}\r\n                        nextPage={nextPage}\r\n                        prevPage={prevPage}\r\n                        changeCurrentPage={onChangeCurrentPage}\r\n                        changeSinglePokemon={onSelectSinglePokemon}\r\n                    />\r\n                    <DetailsCard\r\n                        item={singlePokemon}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokedex\r\n","import React from 'react';\nimport Pokedex from './pages/Pokedex';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pokedex/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport './scss/styles.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}